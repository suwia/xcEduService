<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xuecheng.manage_course.dao.CourseMapper">

    <resultMap id="TeachplanMap" type="com.xuecheng.framework.domain.course.ext.TeachplanNode">
        <id column="first_id" property="id"/>
        <result column="first_name" property="pname"/>
        <collection property="children" ofType="com.xuecheng.framework.domain.course.ext.TeachplanNode">
            <id column="second_id" property="id"/>
            <result column="second_name" property="pname"/>
            <collection property="children" ofType="com.xuecheng.framework.domain.course.ext.TeachplanNode">
                <id column="third_id" property="id"/>
                <result column="third_name" property="pname"/>
            </collection>
        </collection>
    </resultMap>

    <select id="findCourseBaseById" parameterType="java.lang.String"
            resultType="com.xuecheng.framework.domain.course.CourseBase">
        select * from course_base where id = #{id}
    </select>

    <select id="findTeachplanById" parameterType="java.lang.String" resultMap="TeachplanMap">
       SELECT
            a.id first_id,
            a.pname first_name,
            b.id second_id,
            b.pname second_name,
            c.id third_id,
            c.pname third_name
        FROM
            `teachplan` a
            LEFT JOIN teachplan b ON b.parentid = a.id
            LEFT JOIN teachplan c ON c.parentid = b.id
        WHERE
            a.parentid = '0'
            AND a.courseid = #{id}
        ORDER BY
            a.orderby,
            b.orderby,
            c.orderby
    </select>

</mapper>